# -*- coding: utf-8 -*-
# ====================================================
#
#   Copyright (c) 2023 Nuoyan
#   nuoyanlib is licensed under Mulan PSL v2.
#   You can use this software according to the terms and conditions of the Mulan PSL v2.
#   You may obtain a copy of Mulan PSL v2 at:
#            http://license.coscl.org.cn/MulanPSL2
#   THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT, MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.
#   See the Mulan PSL v2 for more details.
#
#   Author        : 诺言Nuoyan
#   Email         : 1279735247@qq.com
#   Gitee         : https://gitee.com/charming-lee
#   Last Modified : 2024-05-30
#
# ====================================================


from typing import Union, Optional, Tuple, Callable, Any
from mod.client.system.clientSystem import ClientSystem
from mod.client.ui.screenNode import ScreenNode
from .._core._typing import EventArgs
from .._core._client._lib_client import NuoyanLibClientSystem


class NuoyanClientSystem(ClientSystem):
    __lib_sys: Optional[NuoyanLibClientSystem]
    __namespace: str
    __system_name: str
    def __init__(self: ..., namespace: str, system_name: str) -> None: ...
    def Destroy(self: ...): ...
    def Update(self: ...): ...
    def GyroSensorChangedClientEvent(self: ..., args: EventArgs): ...
    def ModBlockEntityTickClientEvent(self: ..., args: EventArgs): ...
    def ModBlockEntityRemoveClientEvent(self: ..., args: EventArgs): ...
    def AchievementButtonMovedClientEvent(self: ..., args: EventArgs): ...
    def OnKeyboardControllerLayoutChangeClientEvent(self: ..., args: EventArgs): ...
    def OnGamepadControllerLayoutChangeClientEvent(self: ..., args: EventArgs): ...
    def OnGamepadTriggerClientEvent(self: ..., args: EventArgs): ...
    def OnGamepadStickClientEvent(self: ..., args: EventArgs): ...
    def OnGamepadKeyPressClientEvent(self: ..., args: EventArgs): ...
    def ModBlockEntityLoadedClientEvent(self: ..., args: EventArgs): ...
    def CloseNeteaseShopEvent(self: ..., args: EventArgs): ...
    def PopScreenAfterClientEvent(self: ..., args: EventArgs): ...
    def TapOrHoldReleaseClientEvent(self: ..., args: EventArgs): ...
    def TapBeforeClientEvent(self: ..., args: EventArgs): ...
    def RightClickReleaseClientEvent(self: ..., args: EventArgs): ...
    def RightClickBeforeClientEvent(self: ..., args: EventArgs): ...
    def OnMouseMiddleDownClientEvent(self: ..., args: EventArgs): ...
    def OnKeyPressInGame(self: ..., args: EventArgs): ...
    def OnClientPlayerStopMove(self: ...): ...
    def OnClientPlayerStartMove(self: ...): ...
    def OnBackButtonReleaseClientEvent(self: ..., args: EventArgs): ...
    def MouseWheelClientEvent(self: ..., args: EventArgs): ...
    def LeftClickReleaseClientEvent(self: ..., args: EventArgs): ...
    def LeftClickBeforeClientEvent(self: ..., args: EventArgs): ...
    def HoldBeforeClientEvent(self: ..., args: EventArgs): ...
    def GetEntityByCoordReleaseClientEvent(self: ..., args: EventArgs): ...
    def GetEntityByCoordEvent(self: ..., args: EventArgs): ...
    def ClientJumpButtonReleaseEvent(self: ..., args: EventArgs): ...
    def ClientJumpButtonPressDownEvent(self: ..., args: EventArgs): ...
    def PlaySoundClientEvent(self: ..., args: EventArgs): ...
    def PlayMusicClientEvent(self: ..., args: EventArgs): ...
    def OnMusicStopClientEvent(self: ..., args: EventArgs): ...
    def ScreenSizeChangedClientEvent(self: ..., args: EventArgs): ...
    def PushScreenEvent(self: ..., args: EventArgs): ...
    def PopScreenEvent(self: ..., args: EventArgs): ...
    def PlayerChatButtonClickClientEvent(self: ..., args: EventArgs): ...
    def OnItemSlotButtonClickedEvent(self: ..., args: EventArgs): ...
    def GridComponentSizeChangedClientEvent(self: ..., args: EventArgs): ...
    def ClientPlayerInventoryOpenEvent(self: ..., args: EventArgs): ...
    def ClientPlayerInventoryCloseEvent(self: ..., args: EventArgs): ...
    def ClientChestOpenEvent(self: ..., args: EventArgs): ...
    def ClientChestCloseEvent(self: ..., args: EventArgs): ...
    def WalkAnimEndClientEvent(self: ..., args: EventArgs): ...
    def WalkAnimBeginClientEvent(self: ..., args: EventArgs): ...
    def AttackAnimEndClientEvent(self: ..., args: EventArgs): ...
    def AttackAnimBeginClientEvent(self: ..., args: EventArgs): ...
    def StopUsingItemClientEvent(self: ..., args: EventArgs): ...
    def StartUsingItemClientEvent(self: ..., args: EventArgs): ...
    def PlayerTryDropItemClientEvent(self: ..., args: EventArgs): ...
    def OnCarriedNewItemChangedClientEvent(self: ..., args: EventArgs): ...
    def ItemReleaseUsingClientEvent(self: ..., args: EventArgs): ...
    def InventoryItemChangedClientEvent(self: ..., args: EventArgs): ...
    def GrindStoneRemovedEnchantClientEvent(self: ..., args: EventArgs): ...
    def ClientShapedRecipeTriggeredEvent(self: ..., args: EventArgs): ...
    def ClientItemUseOnEvent(self: ..., args: EventArgs): ...
    def ClientItemTryUseEvent(self: ..., args: EventArgs): ...
    def AnvilCreateResultItemAfterClientEvent(self: ..., args: EventArgs): ...
    def ActorUseItemClientEvent(self: ..., args: EventArgs): ...
    def ActorAcquiredItemClientEvent(self: ..., args: EventArgs): ...
    def StepOnBlockClientEvent(self: ..., args: EventArgs): ...
    def StartDestroyBlockClientEvent(self: ..., args: EventArgs): ...
    def StepOffBlockClientEvent(self: ..., args: EventArgs): ...
    def ShearsDestoryBlockBeforeClientEvent(self: ..., args: EventArgs): ...
    def PlayerTryDestroyBlockClientEvent(self: ..., args: EventArgs): ...
    def OnStandOnBlockClientEvent(self: ..., args: EventArgs): ...
    def OnModBlockNeteaseEffectCreatedClientEvent(self: ..., args: EventArgs): ...
    def OnEntityInsideBlockClientEvent(self: ..., args: EventArgs): ...
    def OnAfterFallOnBlockClientEvent(self: ..., args: EventArgs): ...
    def FallingBlockCauseDamageBeforeClientEvent(self: ..., args: EventArgs): ...
    def ClientBlockUseEvent(self: ..., args: EventArgs): ...
    def PerspChangeClientEvent(self: ..., args: EventArgs): ...
    def OnPlayerHitBlockClientEvent(self: ..., args: EventArgs): ...
    def GameTypeChangedClientEvent(self: ..., args: EventArgs): ...
    def ExtinguishFireClientEvent(self: ..., args: EventArgs): ...
    def DimensionChangeFinishClientEvent(self: ..., args: EventArgs): ...
    def DimensionChangeClientEvent(self: ..., args: EventArgs): ...
    def CameraMotionStopClientEvent(self: ..., args: EventArgs): ...
    def CameraMotionStartClientEvent(self: ..., args: EventArgs): ...
    def LeaveEntityClientEvent(self: ..., args: EventArgs): ...
    def StartRidingClientEvent(self: ..., args: EventArgs): ...
    def OnMobHitMobClientEvent(self: ..., args: EventArgs): ...
    def OnGroundClientEvent(self: ..., args: EventArgs): ...
    def HealthChangeClientEvent(self: ..., args: EventArgs): ...
    def EntityStopRidingEvent(self: ..., args: EventArgs): ...
    def EntityModelChangedClientEvent(self: ..., args: EventArgs): ...
    def ApproachEntityClientEvent(self: ..., args: EventArgs): ...
    def UnLoadClientAddonScriptsBefore(self: ..., args: EventArgs): ...
    def RemovePlayerAOIClientEvent(self: ..., args: EventArgs): ...
    def RemoveEntityClientEvent(self: ..., args: EventArgs): ...
    def OnLocalPlayerStopLoading(self: ..., args: EventArgs): ...
    def OnCommandOutputClientEvent(self: ..., args: EventArgs): ...
    def LoadClientAddonScriptsAfter(self: ..., args: EventArgs): ...
    def ChunkLoadedClientEvent(self: ..., args: EventArgs): ...
    def ChunkAcquireDiscardedClientEvent(self: ..., args: EventArgs): ...
    def AddPlayerCreatedClientEvent(self: ..., args: EventArgs): ...
    def AddPlayerAOIClientEvent(self: ..., args: EventArgs): ...
    def AddEntityClientEvent(self: ..., args: EventArgs): ...
    def OnScriptTickClient(self: ...): ...
    def UiInitFinished(self: ..., args: EventArgs): ...
    def RegisterItemGrid(
        self: ...,
        key: str,
        ui_cls_path: str,
        grid_path: str,
        grid_size: int = 1,
        is_single: bool = False,
    ) -> bool: ...
    def SetQueryVar(self: ..., entity_id: str, name: str, value: float, sync: bool = True) -> bool: ...
    def AddPlayerRenderResources(
        self: ...,
        player_id: str,
        rebuild: bool,
        *res_tuple: Tuple[str, str],
    ) -> Tuple[bool, ...]: ...
    def CallServer(self: ..., name: str, callback: Optional[Callable] = None, *args: Any) -> None: ...
    def BroadcastToAllClient(self: ..., event_name: str, event_data: Any) -> bool: ...
    def RegisterAndCreateUI(
        self: ...,
        namespace: str,
        ui_key: str,
        cls_path: str,
        ui_screen_def: str,
        stack: bool = False,
        param: Optional[dict] = None,
    ) -> Optional[ScreenNode]: ...
    def RegisterAutoShowUiForItem(
        self: ...,
        item_name: Union[str, None],
        ui_node: Optional[ScreenNode] = None,
        func: Optional[Callable[[bool], Any]] = None,
        item_aux: int = -1,
    ) -> bool: ...
    def _set_print_log(self: ...) -> None: ...
