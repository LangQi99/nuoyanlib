# -*- coding: utf-8 -*-
# ====================================================
#
#   Copyright (c) 2023 Nuoyan
#   nuoyanlib is licensed under Mulan PSL v2.
#   You can use this software according to the terms and conditions of the Mulan PSL v2.
#   You may obtain a copy of Mulan PSL v2 at:
#            http://license.coscl.org.cn/MulanPSL2
#   THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT, MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.
#   See the Mulan PSL v2 for more details.
#
#   Author        : 诺言Nuoyan
#   Email         : 1279735247@qq.com
#   Gitee         : https://gitee.com/charming-lee
#   Last Modified : 2024-02-10
#
# ====================================================


from typing import List, Tuple, Set, Callable, Union, Any, Dict, Optional
from ..config import CLIENT_SYSTEM_NAME, MOD_NAME
from comp import ServerSystem


ALL_SERVER_ENGINE_EVENTS: Set[str]
_lsn_func_args: List[Tuple[str, str, str, str, int]]


def _add_listener(
    func: Callable,
    event_name: str = "",
    namespace: str = MOD_NAME,
    system_name: str = CLIENT_SYSTEM_NAME,
    priority: int = 0
) -> None: ...
def server_listener(
    event_name: Union[str, Callable] = "",
    namespace: str = "",
    system_name: str = "",
    priority: int = 0,
) -> Callable[[Callable], Callable]: ...
def _listen_custom(self: ServerSystem) -> None: ...
def _listen_engine(self: ServerSystem) -> None: ...


class NuoyanServerSystem(ServerSystem):
    all_player_data: Dict[str, Any]
    homeowner_player_id: str
    items_data: Dict[str, Dict[Tuple[str, str], List[Optional[dict]]]]
    def __init__(self, namespace: str, system_name: str): ...
    def Destroy(self): ...
    def Update(self): ...
    def PlayerHungerChangeServerEvent(self, args): ...
    def ItemDurabilityChangedServerEvent(self, args): ...
    def PlaceNeteaseLargeFeatureServerEvent(self, args): ...
    def PlayerNamedEntityServerEvent(self, args): ...
    def PlayerFeedEntityServerEvent(self, args): ...
    def OnScriptTickServer(self): ...
    def EntityRemoveEvent(self, args): ...
    def OnCarriedNewItemChangedServerEvent(self, args): ...
    def ProjectileDoHitEffectEvent(self, args): ...
    def ExplosionServerEvent(self, args): ...
    def DamageEvent(self, args): ...
    def DestroyBlockEvent(self, args): ...
    def ActorAcquiredItemServerEvent(self, args): ...
    def ActorUseItemServerEvent(self, args): ...
    def ServerItemUseOnEvent(self, args): ...
    def EntityStartRidingEvent(self, args): ...
    def EntityStopRidingEvent(self, args): ...
    def OnEntityInsideBlockServerEvent(self, args): ...
    def OnMobHitBlockServerEvent(self, args): ...
    def AddEntityServerEvent(self, args): ...
    def MobDieEvent(self, args): ...
    def PlayerInteractServerEvent(self, args): ...
    def PlayerDoInteractServerEvent(self, args): ...
    def EntityDefinitionsEventServerEvent(self, args): ...
    def DimensionChangeFinishServerEvent(self, args): ...
    def HealthChangeBeforeServerEvent(self, args): ...
    def ActuallyHurtServerEvent(self, args): ...
    def EntityDieLoottableServerEvent(self, args): ...
    def SpawnProjectileServerEvent(self, args): ...
    def OnGroundServerEvent(self, args): ...
    def ServerBlockUseEvent(self, args): ...
    def ServerSpawnMobEvent(self, args): ...
    def PlayerAttackEntityEvent(self, args): ...
    def AchievementCompleteEvent(self, args): ...
    def AddServerPlayerEvent(self, args): ...
    def ChunkAcquireDiscardedServerEvent(self, args): ...
    def ChunkGeneratedServerEvent(self, args): ...
    def ChunkLoadedServerEvent(self, args): ...
    def ClientLoadAddonsFinishServerEvent(self, args): ...
    def CommandEvent(self, args): ...
    def DelServerPlayerEvent(self, args): ...
    def LoadServerAddonScriptsAfter(self, args): ...
    def NewOnEntityAreaEvent(self, args): ...
    def OnCommandOutputServerEvent(self, args): ...
    def OnContainerFillLoottableServerEvent(self, args): ...
    def OnLightningLevelChangeServerEvent(self, args): ...
    def OnLocalLightningLevelChangeServerEvent(self, args): ...
    def OnLocalRainLevelChangeServerEvent(self, args): ...
    def OnRainLevelChangeServerEvent(self, args): ...
    def PlaceNeteaseStructureFeatureEvent(self, args): ...
    def PlayerIntendLeaveServerEvent(self, args): ...
    def PlayerJoinMessageEvent(self, args): ...
    def PlayerLeftMessageServerEvent(self, args): ...
    def ServerChatEvent(self, args): ...
    def ServerPostBlockPatternEvent(self, args): ...
    def ServerPreBlockPatternEvent(self, args): ...
    def ServerSpawnMobEvent(self, args): ...
    def ActorHurtServerEvent(self, args): ...
    def AddEffectServerEvent(self, args): ...
    def ChangeSwimStateServerEvent(self, args): ...
    def EntityChangeDimensionServerEvent(self, args): ...
    def EntityDroppedItemServerEvent(self, args): ...
    def EntityEffectDamageServerEvent(self, args): ...
    def EntityLoadScriptEvent(self, args): ...
    def EntityMotionStartServerEvent(self, args): ...
    def EntityMotionStopServerEvent(self, args): ...
    def EntityPickupItemServerEvent(self, args): ...
    def EntityTickServerEvent(self, args): ...
    def HealthChangeServerEvent(self, args): ...
    def MobGriefingBlockServerEvent(self, args): ...
    def OnFireHurtEvent(self, args): ...
    def OnKnockBackServerEvent(self, args): ...
    def OnMobHitMobServerEvent(self, args): ...
    def ProjectileCritHitEvent(self, args): ...
    def RefreshEffectServerEvent(self, args): ...
    def RemoveEffectServerEvent(self, args): ...
    def StartRidingServerEvent(self, args): ...
    def WillAddEffectServerEvent(self, args): ...
    def WillTeleportToServerEvent(self, args): ...
    def AddExpEvent(self, args): ...
    def AddLevelEvent(self, args): ...
    def ChangeLevelUpCostServerEvent(self, args): ...
    def DimensionChangeServerEvent(self, args): ...
    def ExtinguishFireServerEvent(self, args): ...
    def GameTypeChangedServerEvent(self, args): ...
    def OnPlayerHitBlockServerEvent(self, args): ...
    def PlayerDieEvent(self, args): ...
    def PlayerEatFoodServerEvent(self, args): ...
    def PlayerHurtEvent(self, args): ...
    def PlayerRespawnEvent(self, args): ...
    def PlayerRespawnFinishServerEvent(self, args): ...
    def PlayerSleepServerEvent(self, args): ...
    def PlayerStopSleepServerEvent(self, args): ...
    def PlayerTeleportEvent(self, args): ...
    def PlayerTrySleepServerEvent(self, args): ...
    def ServerPlayerGetExperienceOrbEvent(self, args): ...
    def StoreBuySuccServerEvent(self, args): ...
    def BlockDestroyByLiquidServerEvent(self, args): ...
    def BlockLiquidStateChangeAfterServerEvent(self, args): ...
    def BlockLiquidStateChangeServerEvent(self, args): ...
    def BlockNeighborChangedServerEvent(self, args): ...
    def BlockRandomTickServerEvent(self, args): ...
    def BlockRemoveServerEvent(self, args): ...
    def BlockSnowStateChangeAfterServerEvent(self, args): ...
    def BlockSnowStateChangeServerEvent(self, args): ...
    def BlockStrengthChangedServerEvent(self, args): ...
    def ChestBlockTryPairWithServerEvent(self, args): ...
    def CommandBlockContainerOpenEvent(self, args): ...
    def CommandBlockUpdateEvent(self, args): ...
    def DirtBlockToGrassBlockServerEvent(self, args): ...
    def EntityPlaceBlockAfterServerEvent(self, args): ...
    def FallingBlockBreakServerEvent(self, args): ...
    def FallingBlockCauseDamageBeforeServerEvent(self, args): ...
    def FallingBlockReturnHeavyBlockServerEvent(self, args): ...
    def FarmBlockToDirtBlockServerEvent(self, args): ...
    def GrassBlockToDirtBlockServerEvent(self, args): ...
    def HeavyBlockStartFallingServerEvent(self, args): ...
    def HopperTryPullInServerEvent(self, args): ...
    def HopperTryPullOutServerEvent(self, args): ...
    def OnAfterFallOnBlockServerEvent(self, args): ...
    def OnBeforeFallOnBlockServerEvent(self, args): ...
    def OnEntityInsideBlockServerEvent(self, args): ...
    def OnStandOnBlockServerEvent(self, args): ...
    def PistonActionServerEvent(self, args): ...
    def ServerBlockEntityTickEvent(self, args): ...
    def ServerEntityTryPlaceBlockEvent(self, args): ...
    def ServerPlaceBlockEntityEvent(self, args): ...
    def ServerPlayerTryDestroyBlockEvent(self, args): ...
    def ShearsDestoryBlockBeforeServerEvent(self, args): ...
    def StartDestroyBlockServerEvent(self, args): ...
    def StepOffBlockServerEvent(self, args): ...
    def StepOnBlockServerEvent(self, args): ...
    def ContainerItemChangedServerEvent(self, args): ...
    def CraftItemOutputChangeServerEvent(self, args): ...
    def FurnaceBurnFinishedServerEvent(self, args): ...
    def InventoryItemChangedServerEvent(self, args): ...
    def ItemReleaseUsingServerEvent(self, args): ...
    def ItemUseAfterServerEvent(self, args): ...
    def ItemUseOnAfterServerEvent(self, args): ...
    def OnItemPutInEnchantingModelServerEvent(self, args): ...
    def OnNewArmorExchangeServerEvent(self, args): ...
    def OnOffhandItemChangedServerEvent(self, args): ...
    def OnPlayerActiveShieldServerEvent(self, args): ...
    def OnPlayerBlockedByShieldAfterServerEvent(self, args): ...
    def OnPlayerBlockedByShieldBeforeServerEvent(self, args): ...
    def PlayerDropItemServerEvent(self, args): ...
    def ServerItemTryUseEvent(self, args): ...
    def ServerPlayerTryTouchEvent(self, args): ...
    def ShearsUseToBlockBeforeServerEvent(self, args): ...
    def UIContainerItemChangedServerEvent(self, args): ...
    def AttackAnimBeginServerEvent(self, args): ...
    def AttackAnimEndServerEvent(self, args): ...
    def JumpAnimBeginServerEvent(self, args): ...
    def WalkAnimBeginServerEvent(self, args): ...
    def WalkAnimEndServerEvent(self, args): ...
    def PlayerInventoryOpenScriptServerEvent(self, args): ...
    def UrgeShipEvent(self, args): ...
    def lobbyGoodBuySucServerEvent(self, args): ...
    def UiInitFinished(self, args): ...
    def SyncItemsToItemGrid(self, player_id: str, namespace: str, keys: Union[str, Tuple[str, ...]]) -> None: ...
    def SetQueryVar(self, entity_id: str, name: str, value: float) -> None: ...
    def CallClient(self, player_id: str, name: str, callback: Callable = None, *args: Any) -> None: ...
    @property
    def item_grid_data(self) -> Dict[str, Dict[Tuple[str, str], List[Optional[dict]]]]: ...
    @server_listener
    def _ButtonCallbackTriggered(self, args: dict) -> None: ...
    @server_listener("UiInitFinished")
    def _UiInitFinished(self, args: dict) -> None: ...
    @server_listener("PlayerIntendLeaveServerEvent")
    def _PlayerIntendLeaveServerEvent(self, args: dict) -> None: ...
    def _set_print_log(self) -> None: ...


class _TransitServerSystem(ServerSystem):
    items_data: Dict[str, Dict[Tuple[str, str], List[Optional[dict]]]]
    query_cache: Dict[str, Dict[str, float]]
    def __init__(self, namespace: str, system_name: str): ...
    @server_listener
    def _SetQueryVar(self, args: dict) -> None: ...
    @server_listener
    def _InitItemGrid(self, args: dict) -> None: ...
    @server_listener
    def _ThrowItem(self, args: dict) -> None: ...
    @server_listener
    def _SyncItems(self, args: dict) -> None: ...
    @server_listener
    def _UpdateItemsData(self, args: dict) -> None: ...
    @server_listener
    def _BroadcastToAllClient(self, args: dict) -> None: ...


_transit_sys: _TransitServerSystem
